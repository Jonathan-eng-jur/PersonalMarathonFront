{"ast":null,"code":"var _jsxFileName = \"/Users/jcavalcanti/Documents/PersonalMarathon/PersonalMarathonFrontend/marathon-frontend/src/components/RunnerDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WorkoutWeekCard from \"./WorkoutWeekCard\";\nimport { format, addDays } from \"date-fns\"; // Importe funções úteis da date-fns\nimport \"../styles/Runner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RunnerDetails = ({\n  selectedRunner,\n  weeks,\n  setWeeks,\n  handleWorkoutRegistration,\n  handleUpdateWorkout\n}) => {\n  _s();\n  const [expandedWeeks, setExpandedWeeks] = useState([]);\n\n  // Função para calcular o intervalo de datas de segunda a domingo\n  const getWeekDateRange = startDate => {\n    const start = startOfWeek(startDate, {\n      weekStartsOn: 1\n    }); // Segunda-feira como início da semana\n    const end = addDays(start, 6); // Domingo como fim da semana\n    return `${format(start, \"dd/MM/yyyy\")} - ${format(end, \"dd/MM/yyyy\")}`;\n  };\n\n  // Função para alternar a expansão de uma semana\n  const toggleWeekExpand = weekNumber => {\n    setExpandedWeeks(prevExpandedWeeks => prevExpandedWeeks.includes(weekNumber) ? prevExpandedWeeks.filter(week => week !== weekNumber) : [...prevExpandedWeeks, weekNumber]);\n  };\n\n  // Data inicial (27/01/2025)\n  const startDate = new Date(2025, 0, 27); // Janeiro é 0 no JavaScript\n  // Data final (22/06/2025)\n  const endDate = new Date(2025, 5, 22); // Junho é 5 no JavaScript\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"runner-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Detalhes do Corredor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \" \", selectedRunner.name || \"Não informado\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" \", selectedRunner.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Semanas de Treino:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Obs: treinos sugeridos para os long\\xF5es j\\xE1 est\\xE3o cadastrados!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"training-weeks\",\n      children: weeks.map((week, weekIndex) => {\n        // Calcule o intervalo de datas para a semana atual\n        const weekStartDate = addDays(startDate, (week.week - 1) * 7); // Data de início da semana\n        const weekDateRange = getWeekDateRange(weekStartDate);\n\n        // Verifica se a semana está dentro do intervalo permitido\n        if (isBefore(weekStartDate, endDate)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"workout-week-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"week-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"week-title\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Semana \", week.week]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"week-date-range\",\n                  children: [\"(\", weekDateRange, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleWeekExpand(week.week),\n                className: \"expand-button\",\n                children: expandedWeeks.includes(week.week) ? \"Fechar\" : \"Abrir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"week-status\",\n              children: week.hasWorkout ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status-registered\",\n                children: \"Treino cadastrado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status-not-registered\",\n                children: \"Nenhum treino cadastrado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), expandedWeeks.includes(week.week) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"week-workout\",\n              children: /*#__PURE__*/_jsxDEV(WorkoutWeekCard, {\n                week: week,\n                weekIndex: weekIndex,\n                weeks: weeks,\n                setWeeks: setWeeks,\n                selectedRunner: selectedRunner,\n                handleWorkoutRegistration: handleWorkoutRegistration,\n                handleUpdateWorkout: handleUpdateWorkout\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, week.week, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null; // Não renderiza semanas após 22/06/2025\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(RunnerDetails, \"r3OyQ4MwN5S0KlpHgzzd7SXrpOQ=\");\n_c = RunnerDetails;\nexport default RunnerDetails;\nvar _c;\n$RefreshReg$(_c, \"RunnerDetails\");","map":{"version":3,"names":["React","useState","WorkoutWeekCard","format","addDays","jsxDEV","_jsxDEV","RunnerDetails","selectedRunner","weeks","setWeeks","handleWorkoutRegistration","handleUpdateWorkout","_s","expandedWeeks","setExpandedWeeks","getWeekDateRange","startDate","start","startOfWeek","weekStartsOn","end","toggleWeekExpand","weekNumber","prevExpandedWeeks","includes","filter","week","Date","endDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","map","weekIndex","weekStartDate","weekDateRange","isBefore","onClick","hasWorkout","_c","$RefreshReg$"],"sources":["/Users/jcavalcanti/Documents/PersonalMarathon/PersonalMarathonFrontend/marathon-frontend/src/components/RunnerDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport WorkoutWeekCard from \"./WorkoutWeekCard\";\nimport { format, addDays } from \"date-fns\"; // Importe funções úteis da date-fns\nimport \"../styles/Runner.css\";\n\nconst RunnerDetails = ({\n  selectedRunner,\n  weeks,\n  setWeeks,\n  handleWorkoutRegistration,\n  handleUpdateWorkout,\n}) => {\n  const [expandedWeeks, setExpandedWeeks] = useState([]);\n\n  // Função para calcular o intervalo de datas de segunda a domingo\n  const getWeekDateRange = (startDate) => {\n    const start = startOfWeek(startDate, { weekStartsOn: 1 }); // Segunda-feira como início da semana\n    const end = addDays(start, 6); // Domingo como fim da semana\n    return `${format(start, \"dd/MM/yyyy\")} - ${format(end, \"dd/MM/yyyy\")}`;\n  };\n\n  // Função para alternar a expansão de uma semana\n  const toggleWeekExpand = (weekNumber) => {\n    setExpandedWeeks((prevExpandedWeeks) =>\n      prevExpandedWeeks.includes(weekNumber)\n        ? prevExpandedWeeks.filter((week) => week !== weekNumber)\n        : [...prevExpandedWeeks, weekNumber]\n    );\n  };\n\n  // Data inicial (27/01/2025)\n  const startDate = new Date(2025, 0, 27); // Janeiro é 0 no JavaScript\n  // Data final (22/06/2025)\n  const endDate = new Date(2025, 5, 22); // Junho é 5 no JavaScript\n\n  return (\n    <div className=\"runner-details\">\n      <h3>Detalhes do Corredor</h3>\n      <p>\n        <strong>Nome:</strong> {selectedRunner.name || \"Não informado\"}\n      </p>\n      <p>\n        <strong>Email:</strong> {selectedRunner.email}\n      </p>\n      <h4>Semanas de Treino:</h4>\n      <h5>Obs: treinos sugeridos para os longões já estão cadastrados!</h5>\n      <div className=\"training-weeks\">\n        {weeks.map((week, weekIndex) => {\n          // Calcule o intervalo de datas para a semana atual\n          const weekStartDate = addDays(startDate, (week.week - 1) * 7); // Data de início da semana\n          const weekDateRange = getWeekDateRange(weekStartDate);\n\n          // Verifica se a semana está dentro do intervalo permitido\n          if (isBefore(weekStartDate, endDate)) {\n            return (\n              <div key={week.week} className=\"workout-week-card\">\n                <div className=\"week-header\">\n                  <div className=\"week-title\">\n                    <strong>Semana {week.week}</strong>\n                    <span className=\"week-date-range\">({weekDateRange})</span>\n                  </div>\n                  <button\n                    onClick={() => toggleWeekExpand(week.week)}\n                    className=\"expand-button\"\n                  >\n                    {expandedWeeks.includes(week.week) ? \"Fechar\" : \"Abrir\"}\n                  </button>\n                </div>\n\n                <div className=\"week-status\">\n                  {week.hasWorkout ? (\n                    <p className=\"status-registered\">Treino cadastrado</p>\n                  ) : (\n                    <p className=\"status-not-registered\">Nenhum treino cadastrado</p>\n                  )}\n                </div>\n\n                {expandedWeeks.includes(week.week) && (\n                  <div className=\"week-workout\">\n                    <WorkoutWeekCard\n                      week={week}\n                      weekIndex={weekIndex}\n                      weeks={weeks}\n                      setWeeks={setWeeks}\n                      selectedRunner={selectedRunner}\n                      handleWorkoutRegistration={handleWorkoutRegistration}\n                      handleUpdateWorkout={handleUpdateWorkout}\n                    />\n                  </div>\n                )}\n              </div>\n            );\n          } else {\n            return null; // Não renderiza semanas após 22/06/2025\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default RunnerDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}