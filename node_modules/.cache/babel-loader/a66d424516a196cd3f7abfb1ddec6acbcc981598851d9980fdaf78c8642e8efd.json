{"ast":null,"code":"var _jsxFileName = \"/Users/jcavalcanti/Documents/MaratonaRio/marathon-frontend/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getRunners } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [runners, setRunners] = useState([]); // Estado para armazenar os corredores\n  const [error, setError] = useState(\"\"); // Estado para lidar com erros\n\n  useEffect(() => {\n    // Chama a API quando o componente é montado\n    getRunners().then(response => setRunners(response.data)) // Define os corredores retornados\n    .catch(error => setError(\"Erro ao carregar corredores.\")); // Define a mensagem de erro em caso de falha\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Corredores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: runners.map(runner => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nome:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), \" \", runner.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" \", runner.email]\n      }, runner.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"szf1bt3NDK8PY2MY8axiNtoRA1A=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","getRunners","jsxDEV","_jsxDEV","Home","_s","runners","setRunners","error","setError","then","response","data","catch","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","map","runner","name","email","_c","$RefreshReg$"],"sources":["/Users/jcavalcanti/Documents/MaratonaRio/marathon-frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getRunners } from \"../services/api\";\n\nconst Home = () => {\n  const [runners, setRunners] = useState([]); // Estado para armazenar os corredores\n  const [error, setError] = useState(\"\");    // Estado para lidar com erros\n\n  useEffect(() => {\n    // Chama a API quando o componente é montado\n    getRunners()\n      .then((response) => setRunners(response.data)) // Define os corredores retornados\n      .catch((error) => setError(\"Erro ao carregar corredores.\")); // Define a mensagem de erro em caso de falha\n  }, []);\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>Lista de Corredores</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>} {/* Mostra o erro, se houver */}\n      <ul>\n        {runners.map((runner) => (\n          <li key={runner.email}>\n            <strong>Nome:</strong> {runner.name} <br />\n            <strong>Email:</strong> {runner.email}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAI;;EAE3CD,SAAS,CAAC,MAAM;IACd;IACAE,UAAU,CAAC,CAAC,CACTS,IAAI,CAAEC,QAAQ,IAAKJ,UAAU,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAAA,CAC9CC,KAAK,CAAEL,KAAK,IAAKC,QAAQ,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9Bb,OAAA;MAAAa,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BZ,KAAK,iBAAIL,OAAA;MAAGW,KAAK,EAAE;QAAEO,KAAK,EAAE;MAAM,CAAE;MAAAL,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eACnDjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACgB,GAAG,CAAEC,MAAM,iBAClBpB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,MAAM,CAACC,IAAI,EAAC,GAAC,eAAArB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3CjB,OAAA;UAAAa,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,MAAM,CAACE,KAAK;MAAA,GAF9BF,MAAM,CAACE,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}