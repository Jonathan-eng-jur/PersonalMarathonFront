{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useMarathonCountdown = () => {\n  _s();\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    const marathonDate = new Date(\"2025-06-22T06:00:00\").getTime();\n    const updateCountdown = () => {\n      const currentDate = new Date().getTime();\n      const remainingTime = marathonDate - currentDate;\n      if (remainingTime > 0) {\n        const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n        const hours = Math.floor(remainingTime % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        const minutes = Math.floor(remainingTime % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(remainingTime % (1000 * 60) / 1000);\n        setCountdown({\n          days,\n          hours,\n          minutes,\n          seconds\n        });\n      } else {\n        setCountdown({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        });\n      }\n    };\n    const interval = setInterval(updateCountdown, 1000);\n    updateCountdown();\n    return () => clearInterval(interval);\n  }, []);\n  return countdown;\n};\n_s(useMarathonCountdown, \"JGiT0/NMpDYIEq8ibl7/wfmg6Vc=\");\nexport default useMarathonCountdown;","map":{"version":3,"names":["useEffect","useState","useMarathonCountdown","_s","countdown","setCountdown","days","hours","minutes","seconds","marathonDate","Date","getTime","updateCountdown","currentDate","remainingTime","Math","floor","interval","setInterval","clearInterval"],"sources":["/Users/jcavalcanti/Documents/PersonalMarathon/PersonalMarathonFrontend/marathon-frontend/src/hooks/useMarathonCountdown.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useMarathonCountdown = () => {\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    const marathonDate = new Date(\"2025-06-22T06:00:00\").getTime();\n\n    const updateCountdown = () => {\n      const currentDate = new Date().getTime();\n      const remainingTime = marathonDate - currentDate;\n\n      if (remainingTime > 0) {\n        const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n\n        setCountdown({ days, hours, minutes, seconds });\n      } else {\n        setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      }\n    };\n\n    const interval = setInterval(updateCountdown, 1000);\n    updateCountdown();\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return countdown;\n};\n\nexport default useMarathonCountdown;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC;IACzCK,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,IAAIC,IAAI,CAAC,qBAAqB,CAAC,CAACC,OAAO,CAAC,CAAC;IAE9D,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,WAAW,GAAG,IAAIH,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACxC,MAAMG,aAAa,GAAGL,YAAY,GAAGI,WAAW;MAEhD,IAAIC,aAAa,GAAG,CAAC,EAAE;QACrB,MAAMT,IAAI,GAAGU,IAAI,CAACC,KAAK,CAACF,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC9D,MAAMR,KAAK,GAAGS,IAAI,CAACC,KAAK,CAAEF,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACpF,MAAMP,OAAO,GAAGQ,IAAI,CAACC,KAAK,CAAEF,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;QAC5E,MAAMN,OAAO,GAAGO,IAAI,CAACC,KAAK,CAAEF,aAAa,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;QAEhEV,YAAY,CAAC;UAAEC,IAAI;UAAEC,KAAK;UAAEC,OAAO;UAAEC;QAAQ,CAAC,CAAC;MACjD,CAAC,MAAM;QACLJ,YAAY,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC;MAC7D;IACF,CAAC;IAED,MAAMS,QAAQ,GAAGC,WAAW,CAACN,eAAe,EAAE,IAAI,CAAC;IACnDA,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOd,SAAS;AAClB,CAAC;AAACD,EAAA,CAlCID,oBAAoB;AAoC1B,eAAeA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}